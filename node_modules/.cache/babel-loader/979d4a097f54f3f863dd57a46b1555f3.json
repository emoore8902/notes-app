{"ast":null,"code":"import _objectSpread from\"C:/Users/emoor/Downloads/project/note-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"C:/Users/emoor/Downloads/project/note-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/emoor/Downloads/project/note-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import Sidebar from\"./components/Sidebar\";import Editor from\"./components/Editor\";import{data}from\"./data\";import Split from\"react-split\";import{nanoid}from\"nanoid\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function App(){var _React$useState=React.useState(function(){return JSON.parse(localStorage.getItem(\"notes\"))||[];}),_React$useState2=_slicedToArray(_React$useState,2),notes=_React$useState2[0],setNotes=_React$useState2[1];var _React$useState3=React.useState(notes[0]&&notes[0].id||\"\"),_React$useState4=_slicedToArray(_React$useState3,2),currentNoteId=_React$useState4[0],setCurrentNoteId=_React$useState4[1];React.useEffect(function(){localStorage.setItem(\"notes\",JSON.stringify(notes));},[notes]);function createNewNote(){var newNote={id:nanoid(),body:\"# Type your markdown note's title here\"};setNotes(function(prevNotes){return[newNote].concat(_toConsumableArray(prevNotes));});setCurrentNoteId(newNote.id);}function updateNote(text){// Put the most recently-modified note at the top\nsetNotes(function(oldNotes){var newArray=[];for(var i=0;i<oldNotes.length;i++){var oldNote=oldNotes[i];if(oldNote.id===currentNoteId){newArray.unshift(_objectSpread(_objectSpread({},oldNote),{},{body:text}));}else{newArray.push(oldNote);}}return newArray;});}/**\n     * Challenge: complete and implement the deleteNote function\n     * \n     * Hints: \n     * 1. What array method can be used to return a new\n     *    array that has filtered out an item based \n     *    on a condition?\n     * 2. Notice the parameters being based to the function\n     *    and think about how both of those parameters\n     *    can be passed in during the onClick event handler\n     */function deleteNote(event,noteId){event.stopPropagation();setNotes(function(oldNotes){return oldNotes.filter(function(note){return note.id!==noteId;});});}function findCurrentNote(){return notes.find(function(note){return note.id===currentNoteId;})||notes[0];}return/*#__PURE__*/_jsx(\"main\",{children:notes.length>0?/*#__PURE__*/_jsxs(Split,{sizes:[30,70],direction:\"horizontal\",className:\"split\",children:[/*#__PURE__*/_jsx(Sidebar,{notes:notes,currentNote:findCurrentNote(),setCurrentNoteId:setCurrentNoteId,newNote:createNewNote,deleteNote:deleteNote}),currentNoteId&&notes.length>0&&/*#__PURE__*/_jsx(Editor,{currentNote:findCurrentNote(),updateNote:updateNote})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"no-notes\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"You have no notes\"}),/*#__PURE__*/_jsx(\"button\",{className:\"first-note\",onClick:createNewNote,children:\"Create one now\"})]})});}","map":{"version":3,"names":["React","Sidebar","Editor","data","Split","nanoid","App","useState","JSON","parse","localStorage","getItem","notes","setNotes","id","currentNoteId","setCurrentNoteId","useEffect","setItem","stringify","createNewNote","newNote","body","prevNotes","updateNote","text","oldNotes","newArray","i","length","oldNote","unshift","push","deleteNote","event","noteId","stopPropagation","filter","note","findCurrentNote","find"],"sources":["C:/Users/emoor/Downloads/project/note-app/src/App.js"],"sourcesContent":["import React from \"react\"\nimport Sidebar from \"./components/Sidebar\"\nimport Editor from \"./components/Editor\"\nimport { data } from \"./data\"\nimport Split from \"react-split\"\nimport {nanoid} from \"nanoid\"\n\nexport default function App() {\n    const [notes, setNotes] = React.useState(\n        () => JSON.parse(localStorage.getItem(\"notes\")) || []\n    )\n    const [currentNoteId, setCurrentNoteId] = React.useState(\n        (notes[0] && notes[0].id) || \"\"\n    )\n    \n    React.useEffect(() => {\n        localStorage.setItem(\"notes\", JSON.stringify(notes))\n    }, [notes])\n    \n    function createNewNote() {\n        const newNote = {\n            id: nanoid(),\n            body: \"# Type your markdown note's title here\"\n        }\n        setNotes(prevNotes => [newNote, ...prevNotes])\n        setCurrentNoteId(newNote.id)\n    }\n    \n    function updateNote(text) {\n        // Put the most recently-modified note at the top\n        setNotes(oldNotes => {\n            const newArray = []\n            for(let i = 0; i < oldNotes.length; i++) {\n                const oldNote = oldNotes[i]\n                if(oldNote.id === currentNoteId) {\n                    newArray.unshift({ ...oldNote, body: text })\n                } else {\n                    newArray.push(oldNote)\n                }\n            }\n            return newArray\n        })\n    }\n    \n    /**\n     * Challenge: complete and implement the deleteNote function\n     * \n     * Hints: \n     * 1. What array method can be used to return a new\n     *    array that has filtered out an item based \n     *    on a condition?\n     * 2. Notice the parameters being based to the function\n     *    and think about how both of those parameters\n     *    can be passed in during the onClick event handler\n     */\n    \n    function deleteNote(event, noteId) {\n        event.stopPropagation()\n        setNotes(oldNotes => oldNotes.filter(note => note.id !== noteId))\n    }\n    \n    function findCurrentNote() {\n        return notes.find(note => {\n            return note.id === currentNoteId\n        }) || notes[0]\n    }\n    \n    return (\n        <main>\n        {\n            notes.length > 0 \n            ?\n            <Split \n                sizes={[30, 70]} \n                direction=\"horizontal\" \n                className=\"split\"\n            >\n                <Sidebar\n                    notes={notes}\n                    currentNote={findCurrentNote()}\n                    setCurrentNoteId={setCurrentNoteId}\n                    newNote={createNewNote}\n                    deleteNote={deleteNote}\n                />\n                {\n                    currentNoteId && \n                    notes.length > 0 &&\n                    <Editor \n                        currentNote={findCurrentNote()} \n                        updateNote={updateNote} \n                    />\n                }\n            </Split>\n            :\n            <div className=\"no-notes\">\n                <h1>You have no notes</h1>\n                <button \n                    className=\"first-note\" \n                    onClick={createNewNote}\n                >\n                    Create one now\n                </button>\n            </div>\n            \n        }\n        </main>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}