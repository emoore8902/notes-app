{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emoor\\\\Downloads\\\\project\\\\note-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Sidebar from \"./components/Sidebar\";\nimport Editor from \"./components/Editor\";\nimport { data } from \"./data\";\nimport Split from \"react-split\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [notes, setNotes] = React.useState(() => JSON.parse(localStorage.getItem(\"notes\")) || []);\n  const [currentNoteId, setCurrentNoteId] = React.useState(notes[0] && notes[0].id || \"\");\n  React.useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n  function createNewNote() {\n    const newNote = {\n      id: nanoid(),\n      body: \"# Type your markdown note's title here\"\n    };\n    setNotes(prevNotes => [newNote, ...prevNotes]);\n    setCurrentNoteId(newNote.id);\n  }\n  function updateNote(text) {\n    // Put the most recently-modified note at the top\n    setNotes(oldNotes => {\n      const newArray = [];\n      for (let i = 0; i < oldNotes.length; i++) {\n        const oldNote = oldNotes[i];\n        if (oldNote.id === currentNoteId) {\n          newArray.unshift({\n            ...oldNote,\n            body: text\n          });\n        } else {\n          newArray.push(oldNote);\n        }\n      }\n      return newArray;\n    });\n  }\n\n  /**\n   * Challenge: complete and implement the deleteNote function\n   * \n   * Hints: \n   * 1. What array method can be used to return a new\n   *    array that has filtered out an item based \n   *    on a condition?\n   * 2. Notice the parameters being based to the function\n   *    and think about how both of those parameters\n   *    can be passed in during the onClick event handler\n   */\n\n  function deleteNote(event, noteId) {\n    event.stopPropagation();\n    setNotes(oldNotes => oldNotes.filter(note => note.id !== noteId));\n  }\n  function findCurrentNote() {\n    return notes.find(note => {\n      return note.id === currentNoteId;\n    }) || notes[0];\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: notes.length > 0 ? /*#__PURE__*/_jsxDEV(Split, {\n      sizes: [30, 70],\n      direction: \"horizontal\",\n      className: \"split\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        notes: notes,\n        currentNote: findCurrentNote(),\n        setCurrentNoteId: setCurrentNoteId,\n        newNote: createNewNote,\n        deleteNote: deleteNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), currentNoteId && notes.length > 0 && /*#__PURE__*/_jsxDEV(Editor, {\n        currentNote: findCurrentNote(),\n        updateNote: updateNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-notes\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"You have no notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"first-note\",\n        onClick: createNewNote,\n        children: \"Create one now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"h9rVnagE36yNkFkROwCMD8XJBck=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Sidebar","Editor","data","Split","nanoid","App","notes","setNotes","useState","JSON","parse","localStorage","getItem","currentNoteId","setCurrentNoteId","id","useEffect","setItem","stringify","createNewNote","newNote","body","prevNotes","updateNote","text","oldNotes","newArray","i","length","oldNote","unshift","push","deleteNote","event","noteId","stopPropagation","filter","note","findCurrentNote","find"],"sources":["C:/Users/emoor/Downloads/project/note-app/src/App.js"],"sourcesContent":["import React from \"react\"\nimport Sidebar from \"./components/Sidebar\"\nimport Editor from \"./components/Editor\"\nimport { data } from \"./data\"\nimport Split from \"react-split\"\nimport {nanoid} from \"nanoid\"\n\nexport default function App() {\n    const [notes, setNotes] = React.useState(\n        () => JSON.parse(localStorage.getItem(\"notes\")) || []\n    )\n    const [currentNoteId, setCurrentNoteId] = React.useState(\n        (notes[0] && notes[0].id) || \"\"\n    )\n    \n    React.useEffect(() => {\n        localStorage.setItem(\"notes\", JSON.stringify(notes))\n    }, [notes])\n    \n    function createNewNote() {\n        const newNote = {\n            id: nanoid(),\n            body: \"# Type your markdown note's title here\"\n        }\n        setNotes(prevNotes => [newNote, ...prevNotes])\n        setCurrentNoteId(newNote.id)\n    }\n    \n    function updateNote(text) {\n        // Put the most recently-modified note at the top\n        setNotes(oldNotes => {\n            const newArray = []\n            for(let i = 0; i < oldNotes.length; i++) {\n                const oldNote = oldNotes[i]\n                if(oldNote.id === currentNoteId) {\n                    newArray.unshift({ ...oldNote, body: text })\n                } else {\n                    newArray.push(oldNote)\n                }\n            }\n            return newArray\n        })\n    }\n    \n    /**\n     * Challenge: complete and implement the deleteNote function\n     * \n     * Hints: \n     * 1. What array method can be used to return a new\n     *    array that has filtered out an item based \n     *    on a condition?\n     * 2. Notice the parameters being based to the function\n     *    and think about how both of those parameters\n     *    can be passed in during the onClick event handler\n     */\n    \n    function deleteNote(event, noteId) {\n        event.stopPropagation()\n        setNotes(oldNotes => oldNotes.filter(note => note.id !== noteId))\n    }\n    \n    function findCurrentNote() {\n        return notes.find(note => {\n            return note.id === currentNoteId\n        }) || notes[0]\n    }\n    \n    return (\n        <main>\n        {\n            notes.length > 0 \n            ?\n            <Split \n                sizes={[30, 70]} \n                direction=\"horizontal\" \n                className=\"split\"\n            >\n                <Sidebar\n                    notes={notes}\n                    currentNote={findCurrentNote()}\n                    setCurrentNoteId={setCurrentNoteId}\n                    newNote={createNewNote}\n                    deleteNote={deleteNote}\n                />\n                {\n                    currentNoteId && \n                    notes.length > 0 &&\n                    <Editor \n                        currentNote={findCurrentNote()} \n                        updateNote={updateNote} \n                    />\n                }\n            </Split>\n            :\n            <div className=\"no-notes\">\n                <h1>You have no notes</h1>\n                <button \n                    className=\"first-note\" \n                    onClick={createNewNote}\n                >\n                    Create one now\n                </button>\n            </div>\n            \n        }\n        </main>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}